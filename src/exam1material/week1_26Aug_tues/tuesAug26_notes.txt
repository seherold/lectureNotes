CIS 301. Logical Foundations of Programming.

Julie Thornton.

What is this class?
- logical reasoning (basics, puzzles)
- writing formal statements (propositional and predicate logic)
- proofs (why?)
- reasoning about code
    - analyzing what we know
    - identifying equivalent programs
    - simplifying programs
    - formally describing what programs do
- basics of proving correctness of programs (why?)


Syllabus

Canvas setup - weekly class material

Ed Discussion

How to take notes

Attendance/practice quizzes


///////////////////////////////////////////////////////

HW 0 - due Thursday, August 28
    --> see how to do it

HW 1 - due Tuesday, September 2

////////////////////////////////////////////////////////

Taking a step back...what is logic?

- analysis of an argument according to a set of rules
- given a set of premises (and sometimes a conclusion)


- a VALID conclusion is one that is always true
    anytime all the premises are true


Note that the premises might make no sense!


////////////////////////////////////////////////////////

Premise 1: If a person wears a red shirt,
    then they don't like pizza.

Premise 2: Fred is wearing a red shirt.

Conclusion: Fred doesn't like pizza.



--> Is this a valid argument? YES*



(is there a hidden assumption we're making about Fred?)
Fred is a person





////////////////////////////////////////////////////////

Logical Arguments with "OR"
    - can be ambiguous! Why? exclusive vs inclusive


I order fries or I order chips.



- in English, how do we interpret "or"? exclusive



- in programming? || inclusive




"Or" in THIS class: inclusive unless otherwise specified





/////////////////////////////

Premise 1: I'll fold the laundry or I'll do the dishes.
Premise 2: I don't fold the laundry.

--> What can I conclude? 


I'll do the dishes

//////////////////////////////////////////////////////////

num = 5;
if (num < 4 || x >= 10) {
    statement;
}



Suppose we know "statement" is executed
--> What can we conclude? x >= 10

The condition must have been true since we know we entered
the if statement. Since we know num < 4 is false (because num
is 5), we can conclude that the other side of the OR, x >= 10,
must be true.




/////////////////////////////////////////////////////////

x = 9;
if (num < 4 || x >= 10) {
    if (num > 2) {
        statement;
    }
}



Suppose we know "statement" is executed
--> What can we conclude? num < 4 for the outer, num > 2 for the inner

suppose num is an int.


num must be 3
If the statement was executed, the conditions of both if
statements must have been true. From the outer condition,
we already know x >= 10 is false since x is 9. This tells us 
that the other side of the OR in that condition, num < 4, is true.
The inner condition tells us that num > 2 is true. If num
is an int, the only possibility is that num is 3.


////////////////////////////////////////////////////////

What rule are we seeing with an "or" statement,
where we know that one of the statements is NOT true?


the other side is true



////////////////////////////////////////////////////////

Logical Arguments with "IF/THEN" (aka "implies" -> )

If it is raining, then I will get wet.
It is raining.

--> What can I conclude? I will get wet 




How to write with -> symbol?
    p: it is raining
    q: I will get wet
    p -> q



////////////////////////////////////////////////////////

When we have an "if/then" statement,
and we know that the "if" part is true?

    ...what can we always conclude?

the then part is true (modus ponens)



/////////////////////////////////////////////////////////

If I don't hear my alarm, then I will be late for class.
I am late for class.

--> What can I conclude? nothing

I might have heard my alarm, turned it off, and gone back to sleep.
I might have gotten into a car wreck on the way to class.
I might have stopped for coffee.

...there are many reasons why I might be late




/////////////////////////////////////////////////////////

If I don't hear my alarm, then I will be late for class.
I hear my alarm.

--> What can I conclude? nothing

I might either be on time for class or late for any number
of reasons (gone back to sleep, car wreck, etc.). I can't
conclude anything.






/////////////////////////////////////////////////////////

If I don't hear my alarm, then I will be late for class.
I'm not late for class.

--> What can I conclude? I did hear my alarm

If I didn't hear my alarm, I would have been late, which would
be a contradiction. Therefore I must have heard my alarm.



contrapositive


IF I don't hear my alarm THEN I will be late for class.

is equivalent to:
If I'm not late for class, then I did hear my alarm

p->q  is equivalent to !q->!p (this is the contrapositive)



if (condition) {
    statement
}

--> what if we know statement is NOT executed? 

then the condition was false


If p Then q

... is equivalent to?


////////////////////////////////////////////////////////

More if/then logic in programming.


if (num < 4 || x >= 10) {

    y = 17;
}

--> suppose y is 17 here. What do we know?

nothing (y might have already been 17)


/////////////////////////////////////////////////////////

y = 10;
if (num < 4 || x >= 10) {

    y = 17;
}

--> suppose y is 17 here. Can we conclude anything now?

num < 4 || x >= 10 must have been true



//////////////////////////////////////////////////////////

if (num < 4 || x >= 10) {

    y = 17;
}

--> suppose y is NOT 17 here. What do we know?

condition is false
num >= 4 AND x < 10

DeMorgan's law

///////////////////////////////////////////////////////

Attendance/practice quiz in Canvas


///////////////////////////////////////////////////////

Logic puzzles.

The puzzles in this lecture are from or inspired by:
"What is the Name of This Book?", by Raymond Smullyan

///////////////////////////////////////////////////////

The island of Knights and Knaves.
Each inhabitant is either a knight or a knave.

Knights ALWAYS tell the truth, and knaves ALWAYS lie.

///////////////////////////////////////////////////////

Who can say, "I'm a knave"?  nobody

Can a knight? (would be a lie)
Can a knave? (would be true)



//////////////////////////////////////////////////////////

You see two inhabitants, Eve and Fred.

Eve says, "I am a knave or Fred is a knight."



What are Eve and Fred? both knights

Suppose Eve is a knight. Then for her statement to be true,
    Fred must be a knight.

Suppose instead Eve is a knave. Then her statement would be 
    true no matter what Fred is, which shouldn't happen.



(what does the "or" mean?) inclusive



Her WHOLE statement is the or -- we only need to whole statement
to be true, not each individual piece.


/////////////////////////////////////////////////////////

You see two different inhabitants, Ava and Bob.

Ava says that Bob is a knave.
Bob says, "Neither Ava nor I are knaves."


Rewrite Bob: "Ava and I are knights"



What are Ava and Bob? Ava = knight, Bob = knave

Suppose Ava is a knight. Then from her statement, 
    Bob is a knave. Bob's statement is correctly false 
    since they're not both knights.

Suppose instead that Ava is knave. Then from her statement,
    Bob must be a knight. Bob's statment is incorrectly false,
    so not possible. 



What does "neither" mean?
    When is Bob's statement true? both knights
    When is Bob's statement false? somebody or both is a knave




////////////////////////////////////////////////////////

Homework 0: due Thursday, August 28
    - get Sireum + GitHub ready (do this now!)
    - post something in Ed Discussion
    - come to office hours or post in Ed Discussion if
        you need software setup help!

Homework 1: due Tuesday, September 2
    - first page of homework is logical reasoning
        (what we did today)
    - second page is logic puzzles

Next: finish logic puzzles, start truth tables
